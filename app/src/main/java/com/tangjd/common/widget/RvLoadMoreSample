package com.minorfish.hospitalwaste.record;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.View;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.listener.OnItemClickListener;
import com.minorfish.hospitalwaste.R;
import com.minorfish.hospitalwaste.abs.Api;
import com.minorfish.hospitalwaste.abs.Result;
import com.tangjd.common.abs.BaseActivity;
import com.tangjd.common.abs.JsonApiBase;

import org.json.JSONObject;

import java.util.List;

/**
 * Created by tangjd on 2017/2/17.
 */

public class ActRecord extends BaseActivity implements BaseQuickAdapter.RequestLoadMoreListener {
    private SwipeRefreshLayout mSrl;
    private RvRecord mRvRecord;
    private int mCurrPage = 1;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.act_record_layout);
        initView();
        getDataOrRefresh();
    }

    private void hasMore(Object mData) {
        boolean hasMore = false;
        try {
            hasMore = ((JSONObject) mData).optBoolean("hasNextPage");
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (!hasMore) {
            mRvRecord.mAdapter.loadMoreEnd(true);
        }
    }

    private void setData(List<RecordBean> beans) {
        mRvRecord.mAdapter.setNewData(beans);
    }

    private void addData(List<RecordBean> beans) {
        mRvRecord.mAdapter.addData(beans);
    }

    private void getDataOrRefresh() {
        mCurrPage = 1;
        mRvRecord.showLoadingView();
        Api.getRecord(mCurrPage, new JsonApiBase.OnJsonResponseListener() {
            @Override
            public void onResponse(JSONObject response) {
                Result result = Result.parse(response);
                if (result.isSuccess()) {
                    hasMore(result.mData);
                    List<RecordBean> beans = RecordBean.parseList(result.mData);
                    if (beans == null) {
                        mRvRecord.showErrorView();
                    } else if (beans.size() == 0) {
                        mRvRecord.showEmptyView();
                    } else {
                        setData(beans);
                        mRvRecord.clearEmptyView();
                    }
                } else {
                    onError(result.mMsg);
                }
            }

            @Override
            public void onError(String error) {
                showLongToast(error + "");
                mRvRecord.showErrorView();
            }

            @Override
            public void onFinish(boolean withoutException) {
                mSrl.setRefreshing(false);
            }
        });
    }

    @Override
    public void onLoadMoreRequested() {
        mSrl.setEnabled(false);
        mCurrPage++;
        Api.getRecord(mCurrPage, new JsonApiBase.OnJsonResponseListener() {
            @Override
            public void onResponse(JSONObject response) {
                Result result = Result.parse(response);
                if (result.isSuccess()) {
                    hasMore(result.mData);
                    List<RecordBean> beans = RecordBean.parseList(result.mData);
                    if (beans == null || beans.size() == 0) {
                        onError("没有数据");
                        mRvRecord.mAdapter.loadMoreFail();
                    } else {
                        addData(beans);
                        mRvRecord.mAdapter.loadMoreComplete();
                    }
                } else {
                    onError(result.mMsg);
                }
            }

            @Override
            public void onError(String error) {
                showShortToast(error + "");
                mRvRecord.mAdapter.loadMoreFail();
            }

            @Override
            public void onFinish(boolean withoutException) {
                mSrl.setEnabled(true);
            }
        });
    }

    private void initView() {
        setToolbarTitle("垃圾历史");
        enableBackFinish();
        mRvRecord = (RvRecord) findViewById(R.id.rv_record);
        mRvRecord.mAdapter.setOnLoadMoreListener(this);

        mSrl = (SwipeRefreshLayout) findViewById(R.id.srl);
        mSrl.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                getDataOrRefresh();
            }
        });

        mRvRecord.addOnItemTouchListener(new OnItemClickListener() {
            @Override
            public void onSimpleItemClick(BaseQuickAdapter adapter, View view, int position) {
                ActRecordDetail.startActivity(ActRecord.this, ((RecordBean) adapter.getItem(position)).mWasteId);
            }
        });
    }

    public static void startActivity(Context context) {
        context.startActivity(new Intent(context, ActRecord.class));
    }
}

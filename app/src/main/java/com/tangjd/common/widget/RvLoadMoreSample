package com.minorfish.hospitalwaste.msg;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.Nullable;
import android.support.v4.widget.SwipeRefreshLayout;
import android.view.View;

import com.chad.library.adapter.base.BaseQuickAdapter;
import com.chad.library.adapter.base.listener.OnItemClickListener;
import com.minorfish.hospitalwaste.R;
import com.minorfish.hospitalwaste.abs.Api;
import com.minorfish.hospitalwaste.abs.Result;
import com.tangjd.common.abs.BaseActivity;
import com.tangjd.common.abs.JsonApiBase;

import org.json.JSONObject;

/**
 * Created by tangjd on 2017/2/23.
 */
public class ActMsg extends BaseActivity implements BaseQuickAdapter.RequestLoadMoreListener {
    private SwipeRefreshLayout mSrl;
    private RvMsg mRvMsg;
    private int mCurrPage = 1;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.act_msg_layout);
        initView();
        getDataOrRefresh();
    }

    private void getDataOrRefresh() {
        mCurrPage = 1;
        mRvMsg.showLoadingView();
        Api.getMsg(mCurrPage, new JsonApiBase.OnJsonResponseListener() {
            @Override
            public void onResponse(JSONObject response) {
                Result result = Result.parse(response);
                if (result.isSuccess()) {
                    mRvMsg.onGetDataSuccess(((JSONObject) result.mData).optBoolean("hasNextPage"), MsgBean.parseList(result.mData), RvLoadMoreSample.this);
                } else {
                    onError(result.mMsg);
                }
            }

            @Override
            public void onError(String error) {
                mRvMsg.onGetDataFail(error, true);
            }

            @Override
            public void onFinish(boolean withoutException) {
                mSrl.setRefreshing(false);
            }
        });
    }

    @Override
    public void onLoadMoreRequested() {
        mSrl.setEnabled(false);
        mCurrPage++;
        Api.getMsg(mCurrPage, new JsonApiBase.OnJsonResponseListener() {
            @Override
            public void onResponse(JSONObject response) {
                Result result = Result.parse(response);
                if (result.isSuccess()) {
                    mRvMsg.onLoadMoreSuccess(((JSONObject) result.mData).optBoolean("hasNextPage"), MsgBean.parseList(result.mData));
                } else {
                    onError(result.mMsg);
                }
            }

            @Override
            public void onError(String error) {
                mRvMsg.onLoadMoreFail(error);
            }

            @Override
            public void onFinish(boolean withoutException) {
                mSrl.setEnabled(true);
            }
        });
    }

    private void initView() {
        setToolbarTitle("我的消息");
        enableBackFinish();
        mRvMsg = (RvMsg) findViewById(R.id.rv_msg);

        mSrl = (SwipeRefreshLayout) findViewById(R.id.srl);
        mSrl.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                getDataOrRefresh();
            }
        });

        mRvMsg.addOnItemTouchListener(new OnItemClickListener() {
            @Override
            public void onSimpleItemClick(BaseQuickAdapter adapter, View view, int position) {
                ActMsgDetail.startActivity(ActMsg.this, (MsgBean) adapter.getItem(position));
            }
        });
        mRvMsg.setOnEmptyViewClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                getDataOrRefresh();
            }
        });
    }

    public static void startActivity(Context context) {
        context.startActivity(new Intent(context, ActMsg.class));
    }
}
